apply plugin: 'java'
apply plugin: 'war'

group 'com.xz'
version '1.0-SNAPSHOT'
//apply plugin: "idea"

def springVersion = '4.3.20.RELEASE'
def springSecurityVersion = '4.2.9.RELEASE'
sourceCompatibility = 1.8
repositories {
    flatDir {
        // 先看下build.gradle文件所在目录下的 libs目录中有没有
        dirs 'lib'
    }
    maven {
        //如果目录中木有，则找url对应的maven仓库，下面是阿里的maven仓库，速度杠杆的。
        url "http://maven.aliyun.com/nexus/content/groups/public"
    }
    maven { url 'https://jitpack.io' }
    mavenCentral()
}

dependencies {

    compile group: 'org.mybatis', name: 'mybatis-spring', version: '1.3.2'
    compile group: 'commons-dbcp', name: 'commons-dbcp', version: '1.4'
    compile group: 'commons-io', name: 'commons-io', version: '2.11.0'
    compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.0'
    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.59'
    /*compile group: 'org.aspectj', name: 'aspectjrt', version: '1.8.9'
    compile group: 'org.aspectj', name: 'aspectjweaver', version: '1.8.9'*/
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.2'
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '2.0.0'
    compile group: 'javax.validation', name: 'validation-api', version: '1.1.0.Final'
    compile group: 'cn.hutool', name: 'hutool-core', version: '5.4.0'

    compile(
            'org.mybatis:mybatis:3.4.6',
            'jstl:jstl:1.2', 'javax.servlet:javax.servlet-api:3.1.0',
            "org.springframework.security:spring-security-web:$springSecurityVersion",
            "org.springframework.security:spring-security-core:$springSecurityVersion",
            "org.springframework.security:spring-security-config:$springSecurityVersion",
            "org.springframework.security:spring-security-taglibs:$springSecurityVersion",

            "org.springframework:spring-context:$springVersion",
            /*"org.springframework:spring-context-support$springVersion",*/
            "org.springframework:spring-beans:$springVersion",
            "org.springframework:spring-jdbc:$springVersion",
            "org.springframework:spring-web:$springVersion",
            "org.springframework:spring-webmvc:$springVersion",
            "org.springframework:spring-test:$springVersion",

            'com.belerweb:pinyin4j:2.5.1',
    )
    //implementation group: 'nl.captcha', name: 'simplecaptcha', version: '1.2.1'
/*    compile('com.fasterxml.jackson.core:jackson-core:2.9.3',
            'com.fasterxml.jackson.core:jackson-databind:2.9.3')*/
    runtime group: 'mysql', name: 'mysql-connector-java', version: '5.1.49'
    //runtime group: 'mysql', name: 'mysql-connector-java', version: '8.0.21'

    compile group: 'commons-codec', name: 'commons-codec', version: '1.15' //filter 上传文件用 Base64、MD5、Hex、SHA1、DES
    compile group: 'org.apache.commons', name: 'commons-compress', version: '1.20' //filter zip
    runtime 'org.tukaani:xz:1.8'  //解压7z用
    compile 'com.github.axet:java-unrar:1.7.0-8' //rar
    compile group: 'org.apache.poi', name: 'poi-ooxml', version: '4.1.2'
    compile group: 'org.apache.poi', name: 'poi-ooxml-schemas', version: '4.1.2'
    compile group: 'org.apache.solr', name: 'solr-solrj', version: '8.11.2'
    compile group: 'org.apache.xmlbeans', name: 'xmlbeans', version: '3.1.0'
    /*compile group: 'org.apache.lucene', name: 'lucene-analyzers-smartcn', version: '8.6.3' */

    // 依赖maven中不存在的jar
    ext.jarTree = fileTree(dir: 'libs', include: '**/*.jar')
    ext.rootProjectLibs = new File(rootProject.rootDir, 'libs').getAbsolutePath()
    ext.jarTree += fileTree(dir: rootProjectLibs, include: '**/*.jar')

    compile jarTree
}
//指定编译的编码
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
task copyJars(type: Copy) {
    from configurations.runtime
    into 'lib' // 目标位置
}
task copyJarToDeploy(type: Copy) {
    dependsOn  ':jar'
    from  "$buildDir/libs/filter_xz-1.0-SNAPSHOT.jar"
    into "$buildDir/libs/exploded/filter_xz-1.0-SNAPSHOT.war/WEB-INF/lib" // 目标位置
}
task jarWithoutResources(type: Jar) {
    baseName project.name
    from("$buildDir/classes/java/main")
}
task showProjectProperties() {
    println "-------------------------"
    println "${processResources.destinationDir}"
    println projectDir
    println rootProject
    println buildDir
    println rootProject.rootDir
    //println "$rootProject.rootDir/webadmin/src/main/webapp"
    println "-------------------------"
}
/*
war{
    dependsOn jarWithoutResources
    from("$projectDir/src/main/resources") {
        include "*.properties"
        into("WEB-INF/classes")
    }
    classpath=classpath - sourceSets.main.output
    classpath fileTree(dir:libsDir, include:"${project.name}-${version}.jar")
}*/
